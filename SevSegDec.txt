`timescale 1ns / 1ps

module SevSegDec(
    //input en,
    input BTNC, // Center button
    input BTNR, // Right button
    input BTNL, // Left button
    input BTNU, // Up button
    input BTND,  // Down button
    output reg [6:0] segments
);

reg [4:0] led_output; // LEDs 0 and 12-15
//output wire [4:0] LED, 

integer adjust = 0;
integer i = 0; // declare here or? i is the actual time for a *SINGLE* 7-segment digit
// **make 4 counters like i each for every 7seg (i,j,k,l)? one counter for every 1 of the 4 7-segs

	always @(*) begin
        case(i)
            0: segments = 7'b0000001; // 0
            1: segments = 7'b1001111; // 1
            2: segments = 7'b0010010; // 2
            3: segments = 7'b0000110; // 3
            4: segments = 7'b1001100; // 4
            5: segments = 7'b0100100; // 5
            6: segments = 7'b0100000; // 6
            7: segments = 7'b0001111; // 7
            8: segments = 7'b0000000; // 8
            9: segments = 7'b0000100; // 9
 
            default: segments = 7'b0000001; // all ZEROS displayed initially
        endcase
end
	
	//led_output = 5'b00000; // Initialize all LED outputs to 0, all OFF
	
	always @(*) begin
        if (BTNU) begin // UP
	if(i<9) begin // max of i is 9
            i = i + 1; // increment time
	end
        end else if(BTND) begin // DOWN
	if(i>0) begin //minimum of i is 0
            i = i - 1; // decrement time
        end
        end
	
	if(BTNC) begin // CENTER , ENTERED ADJUST MODE (also check wenta rag3 mn adjust to clock/alarm mode)
	if(BTNL) begin // LEFT
	// use led_output[] accordingly
	end 


	end

end // the end of the always block

// Assign LEDs to the output
assign {led_output[0], led_output[4:1]} = led_output; // led_output[0] is connected to LD0, led_output[1] to LD12, led_output[2] to LD13, led_output[3] to LD14, led_output[4] to LD15

endmodule